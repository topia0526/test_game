package battle;

public class Shiyou {

	/*
	 *
	 *
	 *
	 * 【Pokeインスタンス】
	 * ポケモンの個体それぞれに決められているステータス
	 * 名前、タイプ、HP、攻撃力、防御力、覚えている技
	 * （覚えている技の情報...技名、タイプ、威力(追加効果については実装しない)）
	 *
	 *・ポケ個体ごとのデータどうやって実装する？
	 * Trainerインスタンスから名前で指定してPokeコンストラクタ呼び出す。
	 * Pokeコンストラクタからswitchで場合分けしてステータス入れるか？
	 * staメソッド作って呼び出して場合分けしてステータス入れようかな
	 * (多分本来であれば種類ごとにポケクラスから継承した種類子クラス作っておくのがいいんだと思うけど、今回はそこまでやらない)
	 *
	 *
	 *
	 * ★現時点での課題　同名で別個体のポケモンの差別化ができない（解消済）
	 * →タイプと技だけPokeクラス側で代入し、ステータスは各Trainer側インスタンスで代入することにより解消しました。
	 * （結局最初の仕様に近い状態に戻ってしまい無駄な時間を費やしたけど、
	 * 個体値がそれぞれ違うのは今後も変わらないので仕方ない）
	 * →今度は各個体の技もそれぞれ異なる仕様にした場合どうしたらいいか悩んでる・・・同様の処理にするかな・・・
	 * もしくはトレーナー名＋ポケモン名の&&条件で技を決定するインスタンスとか作ってみようかな
	 *
	 * 技をPokeクラスに１つずつ記述して、それを1匹につき4つTrainerクラスで呼び出すのがいいかもしんない
	 *
	 * ・ダメージ計算について
	 * 純粋に「HP - 技の威力*(攻撃/防御)*タイプ相性/10 = ダメージ」でいいかな 細かい実装今のとこしないので
	 * コマンド選択（たたかう）→ 技選択 → ダメージ計算 → 戦闘処理 → コマンド選択に戻る
	 *
	 *
	 *
	 * 【Trainerインスタンス】
	 * ・名前、手持ちポケモン、敗北セリフ
	 * 手持ちポケモン(Poke)はPoke変数配列に6体入れて管理する。
	 *
	 * 戦闘中のAIの仕様について
	 * ※特殊わざについては複雑になるので今回は実装しない。する場合は大幅な仕様変更になりそう
	 * ・技の優先度：ばつぐん＞ふつう＞交代＞いまひとつ＞効果がない
	 * （手持ちがもういない時は交代できないので優先度順にわざを出すようにする）
     * ・受けが効果抜群の場合交代(出来るだけ手前から)
     * 交代ポケモンの選出  交代要員が「攻めが効果なし以外」の場合、攻め有利な順で交代する
     * （受けについては考慮しない、該当無しなら交代しない)
	 *
	 * 戦闘メソッドはTrainerクラスに記述するのが望ましいと思うので、仕様変更するかも
	 *
	 *
	 *
	 *
	 *
	 *・すばやさの概念無し
	 *・
	 *
	 *
	 *
	 *
	 *
	 *
	 *
	 */
}
